/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class example_zhangjunling_com_ndk_hellowork_ThreadActivity */

#ifndef _Included_example_zhangjunling_com_ndk_hellowork_ThreadActivity
#define _Included_example_zhangjunling_com_ndk_hellowork_ThreadActivity
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     example_zhangjunling_com_ndk_hellowork_ThreadActivity
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_example_zhangjunling_com_ndk_1hellowork_ThreadActivity_nativeInit
        (JNIEnv *, jobject);

/*
 * Class:     example_zhangjunling_com_ndk_hellowork_ThreadActivity
 * Method:    nativeFree
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_example_zhangjunling_com_ndk_1hellowork_ThreadActivity_nativeFree
        (JNIEnv *, jobject);

/*
 * Class:     example_zhangjunling_com_ndk_hellowork_ThreadActivity
 * Method:    nativeWork
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_example_zhangjunling_com_ndk_1hellowork_ThreadActivity_nativeWork
        (JNIEnv *, jobject, jint, jint);

/*
 * Class:     example_zhangjunling_com_ndk_hellowork_ThreadActivity
 * Method:    posixThreads
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_example_zhangjunling_com_ndk_1hellowork_ThreadActivity_posixThreads
        (JNIEnv *, jobject, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
